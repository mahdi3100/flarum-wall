{"version":3,"file":"src_core_forum_components_EditPostComposer_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAkC;AACQ;AACU;AACJ;AAEA;AAEhD,SAASK,4BAA4BA,CAACC,CAAC,EAAE;EACvC,IAAIN,kDAAG,CAACO,QAAQ,CAACC,YAAY,CAAC,CAAC,EAAE;IAC/BR,kDAAG,CAACO,QAAQ,CAACE,QAAQ,CAAC,CAAC;IACvBH,CAAC,CAACI,eAAe,CAAC,CAAC;EACrB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUqBC,gBAAgB,0BAAAC,aAAA;EAAA,SAAAD,iBAAA;IAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAAC,oFAAA,CAAAJ,gBAAA,EAAAC,aAAA;EAAAD,gBAAA,CAC5BK,SAAS,GAAhB,SAAOA,SAASA,CAACC,KAAK,EAAE;IACtBL,aAAA,CAAMI,SAAS,CAAAE,IAAA,OAACD,KAAK;IAErBA,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACE,WAAW,IAAInB,kDAAG,CAACoB,UAAU,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACvGJ,KAAK,CAACK,WAAW,GAAGL,KAAK,CAACK,WAAW,IAAItB,kDAAG,CAACoB,UAAU,CAACC,KAAK,CAAC,+CAA+C,CAAC;IAC9GJ,KAAK,CAACM,eAAe,GAAGN,KAAK,CAACM,eAAe,IAAIN,KAAK,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;IACrER,KAAK,CAACS,IAAI,GAAGT,KAAK,CAACS,IAAI,IAAIT,KAAK,CAACO,IAAI,CAACE,IAAI,CAAC,CAAC;IAE5CT,KAAK,CAACO,IAAI,CAACG,aAAa,GAAGV,KAAK,CAACM,eAAe;EAClD,CAAC;EAAA,IAAAK,MAAA,GAAAjB,gBAAA,CAAAkB,SAAA;EAAAD,MAAA,CAEDE,WAAW,GAAX,SAAAA,WAAWA,CAAA,EAAG;IACZ,IAAMC,KAAK,GAAAnB,aAAA,CAAAiB,SAAA,CAASC,WAAW,CAAAZ,IAAA,MAAE;IACjC,IAAMM,IAAI,GAAG,IAAI,CAACP,KAAK,CAACO,IAAI;IAE5BO,KAAK,CAACC,GAAG,CACP,OAAO,EACPC,CAAA,aACEA,CAAA,CAAC7B,+DAAI;MAAC8B,IAAI,EAAE;IAAoB,CAAE,CAAC,EAAC,GAAG,EACvCD,CAAA,CAAC9B,+DAAI;MAACgC,IAAI,EAAEnC,kDAAG,CAACoC,KAAK,CAACC,UAAU,CAACb,IAAI,CAACa,UAAU,CAAC,CAAC,EAAEb,IAAI,CAACc,MAAM,CAAC,CAAC,CAAE;MAACC,OAAO,EAAElC;IAA6B,GACvGL,kDAAG,CAACoB,UAAU,CAACC,KAAK,CAAC,oCAAoC,EAAE;MAAEiB,MAAM,EAAEd,IAAI,CAACc,MAAM,CAAC,CAAC;MAAED,UAAU,EAAEb,IAAI,CAACa,UAAU,CAAC,CAAC,CAACG,KAAK,CAAC;IAAE,CAAC,CACxH,CACJ,CACN,CAAC;IAED,OAAOT,KAAK;EACd;;EAEA;AACF;AACA,KAFE;EAAAH,MAAA,CAGAa,aAAa,GAAb,SAAAA,aAAaA,CAACnC,CAAC,EAAE;IACfD,4BAA4B,CAACC,CAAC,CAAC;IAE/B2B,CAAC,CAACG,KAAK,CAACM,GAAG,CAAC1C,kDAAG,CAACoC,KAAK,CAACZ,IAAI,CAAC,IAAI,CAACP,KAAK,CAACO,IAAI,CAAC,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;AACA,KAJE;EAAAI,MAAA,CAKAe,IAAI,GAAJ,SAAAA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLlB,OAAO,EAAE,IAAI,CAAClB,QAAQ,CAACqC,MAAM,CAACnB,OAAO,CAAC;IACxC,CAAC;EACH,CAAC;EAAAG,MAAA,CAEDiB,QAAQ,GAAR,SAAAA,QAAQA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACT,IAAMT,UAAU,GAAG,IAAI,CAACpB,KAAK,CAACO,IAAI,CAACa,UAAU,CAAC,CAAC;IAE/C,IAAI,CAACU,OAAO,GAAG,IAAI;IAEnB,IAAMJ,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;IAExB,IAAI,CAAC1B,KAAK,CAACO,IAAI,CAACwB,IAAI,CAACL,IAAI,CAAC,CAACM,IAAI,CAAC,UAACzB,IAAI,EAAK;MACxC;MACA;MACA,IAAIxB,kDAAG,CAACkD,iBAAiB,CAACb,UAAU,CAAC,EAAE;QACrCrC,kDAAG,CAACmD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,UAAU,CAAC7B,IAAI,CAACc,MAAM,CAAC,CAAC,CAAC;MACrD,CAAC,MAAM;QACL;QACA;QACA;QACA,IAAMgB,KAAK,GAAGtD,kDAAG,CAACuD,MAAM,CAACC,IAAI,CAC3B;UACEC,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE,CACRzB,CAAA,CAAC/B,iEAAM;YACLyD,SAAS,EAAC,qBAAqB;YAC/BpB,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;cACbN,CAAC,CAACG,KAAK,CAACM,GAAG,CAAC1C,kDAAG,CAACoC,KAAK,CAACZ,IAAI,CAACA,IAAI,CAAC,CAAC;cACjCxB,kDAAG,CAACuD,MAAM,CAACK,OAAO,CAACN,KAAK,CAAC;YAC3B;UAAE,GAEDtD,kDAAG,CAACoB,UAAU,CAACC,KAAK,CAAC,sCAAsC,CACtD,CAAC;QAEb,CAAC,EACDrB,kDAAG,CAACoB,UAAU,CAACC,KAAK,CAAC,yCAAyC,CAChE,CAAC;MACH;MAEAyB,KAAI,CAACvC,QAAQ,CAACsD,IAAI,CAAC,CAAC;IACtB,CAAC,EAAE,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5B,CAAC;EAAA,OAAApD,gBAAA;AAAA,EAtF2CV,qDAAY","sources":["webpack://@leomahdi/flarum-wall/./src/core/forum/components/EditPostComposer.js"],"sourcesContent":["import app from '../../forum/app';\nimport ComposerBody from './ComposerBody';\nimport Button from '../../common/components/Button';\nimport Link from '../../common/components/Link';\n\nimport Icon from '../../common/components/Icon';\n\nfunction minimizeComposerIfFullScreen(e) {\n  if (app.composer.isFullScreen()) {\n    app.composer.minimize();\n    e.stopPropagation();\n  }\n}\n\n/**\n * The `EditPostComposer` component displays the composer content for editing a\n * post. It sets the initial content to the content of the post that is being\n * edited, and adds a header control to indicate which post is being edited.\n *\n * ### Attrs\n *\n * - All of the attrs for ComposerBody\n * - `post`\n */\nexport default class EditPostComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_edit.submit_button');\n    attrs.confirmExit = attrs.confirmExit || app.translator.trans('core.forum.composer_edit.discard_confirmation');\n    attrs.originalContent = attrs.originalContent || attrs.post.content();\n    attrs.user = attrs.user || attrs.post.user();\n\n    attrs.post.editedContent = attrs.originalContent;\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n    const post = this.attrs.post;\n\n    items.add(\n      'title',\n      <h3>\n        <Icon name={'fas fa-pencil-alt'} />{' '}\n        <Link href={app.route.discussion(post.discussion(), post.number())} onclick={minimizeComposerIfFullScreen}>\n          {app.translator.trans('core.forum.composer_edit.post_link', { number: post.number(), discussion: post.discussion().title() })}\n        </Link>\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Jump to the preview when triggered by the text editor.\n   */\n  jumpToPreview(e) {\n    minimizeComposerIfFullScreen(e);\n\n    m.route.set(app.route.post(this.attrs.post));\n  }\n\n  /**\n   * Get the data to submit to the server when the post is saved.\n   *\n   * @return {Record<string, unknown>}\n   */\n  data() {\n    return {\n      content: this.composer.fields.content(),\n    };\n  }\n\n  onsubmit() {\n    const discussion = this.attrs.post.discussion();\n\n    this.loading = true;\n\n    const data = this.data();\n\n    this.attrs.post.save(data).then((post) => {\n      // If we're currently viewing the discussion which this edit was made\n      // in, then we can scroll to the post.\n      if (app.viewingDiscussion(discussion)) {\n        app.current.get('stream').goToNumber(post.number());\n      } else {\n        // Otherwise, we'll create an alert message to inform the user that\n        // their edit has been made, containing a button which will\n        // transition to their edited post when clicked.\n        const alert = app.alerts.show(\n          {\n            type: 'success',\n            controls: [\n              <Button\n                className=\"Button Button--link\"\n                onclick={() => {\n                  m.route.set(app.route.post(post));\n                  app.alerts.dismiss(alert);\n                }}\n              >\n                {app.translator.trans('core.forum.composer_edit.view_button')}\n              </Button>,\n            ],\n          },\n          app.translator.trans('core.forum.composer_edit.edited_message')\n        );\n      }\n\n      this.composer.hide();\n    }, this.loaded.bind(this));\n  }\n}\n"],"names":["app","ComposerBody","Button","Link","Icon","minimizeComposerIfFullScreen","e","composer","isFullScreen","minimize","stopPropagation","EditPostComposer","_ComposerBody","apply","arguments","_inheritsLoose","initAttrs","attrs","call","submitLabel","translator","trans","confirmExit","originalContent","post","content","user","editedContent","_proto","prototype","headerItems","items","add","m","name","href","route","discussion","number","onclick","title","jumpToPreview","set","data","fields","onsubmit","_this","loading","save","then","viewingDiscussion","current","get","goToNumber","alert","alerts","show","type","controls","className","dismiss","hide","loaded","bind","default"],"sourceRoot":""}