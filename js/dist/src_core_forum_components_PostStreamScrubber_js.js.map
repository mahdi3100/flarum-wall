{"version":3,"file":"src_core_forum_components_PostStreamScrubber_js.js","mappings":"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","sources":["webpack://@leo/profile-users-comments/./src/core/common/utils/formatNumber.ts","webpack://@leo/profile-users-comments/./src/core/forum/components/PostStreamScrubber.js"],"sourcesContent":["import app from '../../common/app';\n\n/**\n * The `formatNumber` utility localizes a number into a string with the\n * appropriate punctuation based on the provided locale otherwise will default to the users locale.\n *\n * @example\n * formatNumber(1234);\n * // 1,234\n */\nexport default function formatNumber(number: number, locale: string = app.data.locale): string {\n  return new Intl.NumberFormat(locale).format(number);\n}\n","import app from '../../forum/app';\nimport Component from '../../common/Component';\nimport formatNumber from '../../common/utils/formatNumber';\nimport ScrollListener from '../../common/utils/ScrollListener';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\n\n/**\n * The `PostStreamScrubber` component displays a scrubber which can be used to\n * navigate/scrub through a post stream.\n *\n * ### Attrs\n *\n * - `stream`\n * - `className`\n */\nexport default class PostStreamScrubber extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.stream = this.attrs.stream;\n    this.handlers = {};\n\n    this.scrollListener = new ScrollListener(this.updateScrubberValues.bind(this, { fromScroll: true, forceHeightChange: true }));\n  }\n\n  view() {\n    const count = this.stream.count();\n\n    // Index is left blank for performance reasons, it is filled in in updateScubberValues\n    const viewing = app.translator.trans('core.forum.post_scrubber.viewing_text', {\n      count,\n      index: <span className=\"Scrubber-index\"></span>,\n      formattedCount: <span className=\"Scrubber-count\">{formatNumber(count)}</span>,\n    });\n\n    const unreadCount = this.stream.discussion.unreadCount();\n    const unreadPercent = count ? Math.min(count - this.stream.index, unreadCount) / count : 0;\n\n    function styleUnread(vnode) {\n      const $element = $(vnode.dom);\n      const newStyle = {\n        top: 100 - unreadPercent * 100 + '%',\n        height: unreadPercent * 100 + '%',\n        opacity: unreadPercent ? 1 : 0,\n      };\n\n      if (vnode.state.oldStyle) {\n        $element.stop(true).css(vnode.state.oldStyle).animate(newStyle);\n      } else {\n        $element.css(newStyle);\n      }\n\n      vnode.state.oldStyle = newStyle;\n    }\n    const classNames = ['PostStreamScrubber', 'Dropdown'];\n    if (this.attrs.className) classNames.push(this.attrs.className);\n\n    return (\n      <div className={classNames.join(' ')}>\n        <button className=\"Button Dropdown-toggle\" data-toggle=\"dropdown\">\n          {viewing} <Icon name={'fas fa-sort'} />\n        </button>\n\n        <div className=\"Dropdown-menu dropdown-menu\">\n          <div className=\"Scrubber\">\n            <Button className=\"Scrubber-first Button Button--link\" onclick={this.goToFirst.bind(this)} icon=\"fas fa-angle-double-up\">\n              {app.translator.trans('core.forum.post_scrubber.original_post_link')}\n            </Button>\n\n            <div className=\"Scrubber-scrollbar\">\n              <div className=\"Scrubber-before\" />\n              <div className=\"Scrubber-handle\">\n                <div className=\"Scrubber-bar\" />\n                <div className=\"Scrubber-info\">\n                  <strong>{viewing}</strong>\n                  <span className=\"Scrubber-description\"></span>\n                </div>\n              </div>\n              <div className=\"Scrubber-after\" />\n\n              <div className=\"Scrubber-unread\" oncreate={styleUnread} onupdate={styleUnread}>\n                {app.translator.trans('core.forum.post_scrubber.unread_text', { count: unreadCount })}\n              </div>\n            </div>\n\n            <Button className=\"Scrubber-last Button Button--link\" onclick={this.goToLast.bind(this)} icon=\"fas fa-angle-double-down\">\n              {app.translator.trans('core.forum.post_scrubber.now_link')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onupdate(vnode) {\n    super.onupdate(vnode);\n\n    if (this.stream.forceUpdateScrubber) {\n      this.stream.forceUpdateScrubber = false;\n      this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: true, forceHeightChange: true }));\n    }\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Whenever the window is resized, adjust the height of the scrollbar\n    // so that it fills the height of the sidebar.\n    $(window)\n      .on('resize', (this.handlers.onresize = this.onresize.bind(this)))\n      .resize();\n\n    // When any part of the whole scrollbar is clicked, we want to jump to\n    // that position.\n    this.$('.Scrubber-scrollbar')\n      .bind('click', this.onclick.bind(this))\n\n      // Now we want to make the scrollbar handle draggable. Let's start by\n      // preventing default browser events from messing things up.\n      .bind('dragstart mousedown touchstart', (e) => e.preventDefault());\n\n    // When the mouse is pressed on the scrollbar handle, we capture some\n    // information about its current position. We will store this\n    // information in an object and pass it on to the document's\n    // mousemove/mouseup events later.\n    this.dragging = false;\n    this.mouseStart = 0;\n    this.indexStart = 0;\n\n    this.$('.Scrubber-handle')\n      .bind('mousedown touchstart', this.onmousedown.bind(this))\n\n      // Exempt the scrollbar handle from the 'jump to' click event.\n      .click((e) => e.stopPropagation());\n\n    // When the mouse moves and when it is released, we pass the\n    // information that we captured when the mouse was first pressed onto\n    // some event handlers. These handlers will move the scrollbar/stream-\n    // content as appropriate.\n    $(document)\n      .on('mousemove touchmove', (this.handlers.onmousemove = this.onmousemove.bind(this)))\n      .on('mouseup touchend', (this.handlers.onmouseup = this.onmouseup.bind(this)));\n\n    setTimeout(() => this.scrollListener.start());\n\n    this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: false, forceHeightChange: true }));\n  }\n\n  onremove(vnode) {\n    super.onremove(vnode);\n\n    this.scrollListener.stop();\n    $(window).off('resize', this.handlers.onresize);\n\n    $(document).off('mousemove touchmove', this.handlers.onmousemove).off('mouseup touchend', this.handlers.onmouseup);\n  }\n\n  /**\n   * Update the scrollbar's position to reflect the current values of the\n   * index/visible properties.\n   *\n   * @param {Partial<{fromScroll: boolean, forceHeightChange: boolean, animate: boolean}>} options\n   */\n  updateScrubberValues(options = {}) {\n    const index = this.stream.index;\n    const count = this.stream.count();\n    const visible = this.stream.visible || 1;\n    const percentPerPost = this.percentPerPost();\n\n    const $scrubber = this.$();\n    $scrubber.find('.Scrubber-index').text(formatNumber(this.stream.sanitizeIndex(Math.max(1, index))));\n    $scrubber.find('.Scrubber-description').text(this.stream.description);\n    $scrubber.toggleClass('disabled', this.stream.disabled());\n\n    const heights = {};\n    heights.before = Math.max(0, percentPerPost.index * Math.min(index - 1, count - visible));\n    heights.handle = Math.min(100 - heights.before, percentPerPost.visible * visible);\n    heights.after = 100 - heights.before - heights.handle;\n\n    // If the stream is paused, don't change height on scroll, as the viewport is being scrolled by the JS\n    // If a height change animation is already in progress, don't adjust height unless overriden\n    if ((options.fromScroll && this.stream.paused) || (this.adjustingHeight && !options.forceHeightChange)) return;\n\n    const func = options.animate ? 'animate' : 'css';\n    this.adjustingHeight = true;\n    const animationPromises = [];\n    for (const part in heights) {\n      const $part = $scrubber.find(`.Scrubber-${part}`);\n      animationPromises.push(\n        $part\n          .stop(true, true)\n          [func]({ height: heights[part] + '%' }, 'fast')\n          .promise()\n      );\n\n      // jQuery likes to put overflow:hidden, but because the scrollbar handle\n      // has a negative margin-left, we need to override.\n      if (func === 'animate') $part.css('overflow', 'visible');\n    }\n    Promise.all(animationPromises).then(() => (this.adjustingHeight = false));\n  }\n\n  /**\n   * Go to the first post in the discussion.\n   */\n  goToFirst() {\n    this.stream.goToFirst();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  /**\n   * Go to the last post in the discussion.\n   */\n  goToLast() {\n    this.stream.goToLast();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  onresize() {\n    // Adjust the height of the scrollbar so that it fills the height of\n    // the sidebar and doesn't overlap the footer.\n    const scrubber = this.$();\n    const scrollbar = this.$('.Scrubber-scrollbar');\n\n    scrollbar.css(\n      'max-height',\n      $(window).height() -\n        scrubber.offset().top +\n        $(window).scrollTop() -\n        parseInt($('#app').css('padding-bottom'), 10) -\n        (scrubber.outerHeight() - scrollbar.outerHeight())\n    );\n  }\n\n  onmousedown(e) {\n    e.redraw = false;\n    this.mouseStart = e.clientY || e.originalEvent.touches[0].clientY;\n    this.indexStart = this.stream.index;\n    this.dragging = true;\n    $('body').css('cursor', 'move');\n    this.$().toggleClass('dragging', this.dragging);\n  }\n\n  onmousemove(e) {\n    if (!this.dragging) return;\n\n    // Work out how much the mouse has moved by - first in pixels, then\n    // convert it to a percentage of the scrollbar's height, and then\n    // finally convert it into an index. Add this delta index onto\n    // the index at which the drag was started, and then scroll there.\n    const deltaPixels = (e.clientY || e.originalEvent.touches[0].clientY) - this.mouseStart;\n    const deltaPercent = (deltaPixels / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const deltaIndex = deltaPercent / this.percentPerPost().index || 0;\n    const newIndex = Math.min(this.indexStart + deltaIndex, this.stream.count() - 1);\n\n    this.stream.index = Math.max(0, newIndex);\n    this.updateScrubberValues();\n  }\n\n  onmouseup() {\n    this.$().toggleClass('dragging', this.dragging);\n    if (!this.dragging) return;\n\n    this.mouseStart = 0;\n    this.indexStart = 0;\n    this.dragging = false;\n    $('body').css('cursor', '');\n\n    this.$().removeClass('open');\n\n    // If the index we've landed on is in a gap, then tell the stream-\n    // content that we want to load those posts.\n    const intIndex = Math.floor(this.stream.index);\n    this.stream.goToIndex(intIndex);\n  }\n\n  onclick(e) {\n    // Calculate the index which we want to jump to based on the click position.\n\n    // 1. Get the offset of the click from the top of the scrollbar, as a\n    //    percentage of the scrollbar's height.\n    const $scrollbar = this.$('.Scrubber-scrollbar');\n    const offsetPixels = (e.pageY || e.originalEvent.touches[0].pageY) - $scrollbar.offset().top + $('body').scrollTop();\n    let offsetPercent = (offsetPixels / $scrollbar.outerHeight()) * 100;\n\n    // 2. We want the handle of the scrollbar to end up centered on the click\n    //    position. Thus, we calculate the height of the handle in percent and\n    //    use that to find a new offset percentage.\n    offsetPercent = offsetPercent - parseFloat($scrollbar.find('.Scrubber-handle')[0].style.height) / 2;\n\n    // 3. Now we can convert the percentage into an index, and tell the stream-\n    //    content component to jump to that index.\n    let offsetIndex = offsetPercent / this.percentPerPost().index;\n    offsetIndex = Math.max(0, Math.min(this.stream.count() - 1, offsetIndex));\n    this.stream.goToIndex(Math.floor(offsetIndex));\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n\n    this.$().removeClass('open');\n  }\n\n  /**\n   * Get the percentage of the height of the scrubber that should be allocated\n   * to each post.\n   *\n   * @return {{ index: number, visible: number }}\n   * @property {Number} index The percent per post for posts on either side of\n   *     the visible part of the scrubber.\n   * @property {Number} visible The percent per post for the visible part of the\n   *     scrubber.\n   */\n  percentPerPost() {\n    const count = this.stream.count() || 1;\n    const visible = this.stream.visible || 1;\n\n    // To stop the handle of the scrollbar from getting too small when there\n    // are many posts, we define a minimum percentage height for the handle\n    // calculated from a 50 pixel limit. From this, we can calculate the\n    // minimum percentage per visible post. If this is greater than the actual\n    // percentage per post, then we need to adjust the 'before' percentage to\n    // account for it.\n    const minPercentVisible = (50 / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const percentPerVisiblePost = Math.max(100 / count, minPercentVisible / visible);\n    const percentPerPost = count === visible ? 0 : (100 - percentPerVisiblePost * visible) / (count - visible);\n\n    return {\n      index: percentPerPost,\n      visible: percentPerVisiblePost,\n    };\n  }\n}\n"],"names":["app","formatNumber","number","locale","data","Intl","NumberFormat","format","Component","ScrollListener","Icon","Button","PostStreamScrubber","_Component","apply","arguments","_inheritsLoose","_proto","prototype","oninit","vnode","call","stream","attrs","handlers","scrollListener","updateScrubberValues","bind","fromScroll","forceHeightChange","view","count","viewing","translator","trans","index","m","className","formattedCount","unreadCount","discussion","unreadPercent","Math","min","styleUnread","$element","$","dom","newStyle","top","height","opacity","state","oldStyle","stop","css","animate","classNames","push","join","name","onclick","goToFirst","icon","oncreate","onupdate","goToLast","_this","forceUpdateScrubber","loadPromise","then","_this2","window","on","onresize","resize","e","preventDefault","dragging","mouseStart","indexStart","onmousedown","click","stopPropagation","document","onmousemove","onmouseup","setTimeout","start","onremove","off","options","_this3","visible","percentPerPost","$scrubber","find","text","sanitizeIndex","max","description","toggleClass","disabled","heights","before","handle","after","paused","adjustingHeight","func","animationPromises","part","$part","promise","Promise","all","scrubber","scrollbar","offset","scrollTop","parseInt","outerHeight","redraw","clientY","originalEvent","touches","deltaPixels","deltaPercent","deltaIndex","newIndex","removeClass","intIndex","floor","goToIndex","$scrollbar","offsetPixels","pageY","offsetPercent","parseFloat","style","offsetIndex","minPercentVisible","percentPerVisiblePost","default"],"sourceRoot":""}