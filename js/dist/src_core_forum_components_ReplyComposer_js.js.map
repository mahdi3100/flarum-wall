{"version":3,"file":"src_core_forum_components_ReplyComposer_js.js","mappings":"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","sources":["webpack://@leomahdi/flarum-wall/./src/core/forum/components/ReplyComposer.js"],"sourcesContent":["import app from '../../forum/app';\nimport ComposerBody from './ComposerBody';\nimport Button from '../../common/components/Button';\nimport Link from '../../common/components/Link';\nimport extractText from '../../common/utils/extractText';\nimport Icon from '../../common/components/Icon';\n\nfunction minimizeComposerIfFullScreen(e) {\n  if (app.composer.isFullScreen()) {\n    app.composer.minimize();\n    e.stopPropagation();\n  }\n}\n\n/**\n * The `ReplyComposer` component displays the composer content for replying to a\n * discussion.\n *\n * ### Attrs\n *\n * - All of the attrs of ComposerBody\n * - `discussion`\n */\nexport default class ReplyComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.placeholder = attrs.placeholder || extractText(app.translator.trans('core.forum.composer_reply.body_placeholder'));\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_reply.submit_button');\n    attrs.confirmExit = attrs.confirmExit || extractText(app.translator.trans('core.forum.composer_reply.discard_confirmation'));\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n    const discussion = this.attrs.discussion;\n\n    items.add(\n      'title',\n      <h3>\n        <Icon name={'fas fa-reply'} />{' '}\n        <Link href={app.route.discussion(discussion)} onclick={minimizeComposerIfFullScreen}>\n          {discussion.title()}\n        </Link>\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Jump to the preview when triggered by the text editor.\n   */\n  jumpToPreview(e) {\n    minimizeComposerIfFullScreen(e);\n\n    m.route.set(app.route.discussion(this.attrs.discussion, 'reply'));\n  }\n\n  /**\n   * Get the data to submit to the server when the reply is saved.\n   *\n   * @return {Record<string, unknown>}\n   */\n  data() {\n    return {\n      content: this.composer.fields.content(),\n      relationships: { discussion: this.attrs.discussion },\n    };\n  }\n\n  onsubmit() {\n    const discussion = this.attrs.discussion;\n\n    this.loading = true;\n    m.redraw();\n\n    const data = this.data();\n\n    app.store\n      .createRecord('posts')\n      .save(data)\n      .then((post) => {\n        // If we're currently viewing the discussion which this reply was made\n        // in, then we can update the post stream and scroll to the post.\n        if (app.viewingDiscussion(discussion)) {\n          const stream = app.current.get('stream');\n          stream.update().then(() => stream.goToNumber(post.number()));\n        } else {\n          // Otherwise, we'll create an alert message to inform the user that\n          // their reply has been posted, containing a button which will\n          // transition to their new post when clicked.\n          let alert;\n          const viewButton = (\n            <Button\n              className=\"Button Button--link\"\n              onclick={() => {\n                m.route.set(app.route.post(post));\n                app.alerts.dismiss(alert);\n              }}\n            >\n              {app.translator.trans('core.forum.composer_reply.view_button')}\n            </Button>\n          );\n          alert = app.alerts.show(\n            {\n              type: 'success',\n              controls: [viewButton],\n            },\n            app.translator.trans('core.forum.composer_reply.posted_message')\n          );\n        }\n\n        this.composer.hide();\n      }, this.loaded.bind(this));\n  }\n}\n"],"names":["app","ComposerBody","Button","Link","extractText","Icon","minimizeComposerIfFullScreen","e","composer","isFullScreen","minimize","stopPropagation","ReplyComposer","_ComposerBody","apply","arguments","_inheritsLoose","initAttrs","attrs","call","placeholder","translator","trans","submitLabel","confirmExit","_proto","prototype","headerItems","items","discussion","add","m","name","href","route","onclick","title","jumpToPreview","set","data","content","fields","relationships","onsubmit","_this","loading","redraw","store","createRecord","save","then","post","viewingDiscussion","stream","current","get","update","goToNumber","number","alert","viewButton","className","alerts","dismiss","show","type","controls","hide","loaded","bind","default"],"sourceRoot":""}