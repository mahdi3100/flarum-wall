{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@leo/profile-users-comments/./src/common/index.ts","webpack://@leo/profile-users-comments/./src/forum/CustomDiscussionComposer.js","webpack://@leo/profile-users-comments/./src/forum/MyDecomposerButton.ts","webpack://@leo/profile-users-comments/./src/forum/MyFormComponent.js","webpack://@leo/profile-users-comments/./src/forum/NavitemWall.ts","webpack://@leo/profile-users-comments/./src/forum/PostsUserWall.ts","webpack://@leo/profile-users-comments/./src/forum/UserWall.tsx","webpack://@leo/profile-users-comments/./src/forum/index.tsx","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/app']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/components/Button']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/components/ErrorText']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/extend']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/models/Post']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/app']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/states/PostStreamState']\"","webpack://@leo/profile-users-comments/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@leo/profile-users-comments/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@leo/profile-users-comments/webpack/bootstrap","webpack://@leo/profile-users-comments/webpack/runtime/compat get default export","webpack://@leo/profile-users-comments/webpack/runtime/define property getters","webpack://@leo/profile-users-comments/webpack/runtime/hasOwnProperty shorthand","webpack://@leo/profile-users-comments/webpack/runtime/make namespace object","webpack://@leo/profile-users-comments/./forum.ts"],"sourcesContent":["import app from 'flarum/common/app';\n\napp.initializers.add('leo/profile-users-comments', () => {\n  console.log('[leo/profile-users-comments] Hello, forum and admin!');\n});\n","import app from 'flarum/forum/app';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport Stream from 'flarum/common/utils/Stream';\n//import Component from 'flarum/Component';\nexport default class CustomDiscussionComposer extends DiscussionComposer{\n\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.titlePlaceholder = \"Create a thread ! \"\n    attrs.submitLabel =  \"Create a thread  ! \"\n    \n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Initialize streams for title and content\n    this.fields = {\n      title: Stream(''),\n      content: Stream(''),\n      tags: Stream([]),\n      discussions_wall: Stream(1)\n    };\n  }\n  data() {\n    let data = super.data();\n    data.discussions_wall =this.fields.discussions_wall();\n   \n    return data;\n  }\n\n   \n  onsubmit() {\n    this.loading = true;\n \n    const title = this.composer.fields.title();\n    const content = this.composer.fields.content();\n\n    // Basic validation (you can expand this)\n    if (!title || !content) {\n      alert('Please fill in both the title and content.');\n      return;\n    }\n\n    const data = this.data();\n    console.log(\"here is data\")\n  console.log(data)\n    // Create and save the discussion\n    app.store\n      .createRecord('discussions')\n      .save(data)\n      .then((discussion) => {\n        // After success, redirect to the new discussion\n        //m.route.set(app.route.discussion(discussion));\n         // m.route.set(app.route.userWall());\n         // m.route.set(`/u/${m.route.param('username')}/wall`,null); \n\n         if (app.redrawHandler) {\n          app.redrawHandler(discussion.id());  // Trigger redraw via the global handler\n        }\n        // Hide the composer\n        app.composer.hide();\n\n        console.log('Discussion created successfully:', discussion);\n      })\n      .catch((error) => {\n        app.composer.hide();\n        console.error('Error creating discussion:', error);\n        alert('There was an error creating the discussion.');\n      });\n  }\n  \n  \n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport Stream from 'flarum/common/utils/Stream';\nimport CustomDiscussionComposer from './CustomDiscussionComposer';\n\n\nexport default class CustomDiscussionButton {\n  /*view() {\n    return (\n      m('button.Post.ReplyPlaceholder', { onclick: this.action.bind(this) }, [\n      m('div.Post-container', [\n          /*m('div.Post-side', [\n              m(Avatar, { user: app.session.user, className: 'Post-avatar' })\n          ]),*//*\n          m('div.Post-main', [\n            m('span.Post-header', \"Create a thread ! \")\n        ])\n    ])\n]))\n  }*/\n\n  component() {\n\n    return Button.component(\n      {\n        icon: 'fas fa-pen',\n        className: 'Button Button--primary IndexPage-newDiscussion',\n        onclick: this.action.bind(this),\n        //disabled: !this.canStartDiscussion,\n      },\n   \"Create a thread !\");\n  }\n  action(e:any) {\n    e.preventDefault();\n\n    return new Promise((resolve, reject) => {\n      if (app.session.user) {\n\n        app.composer.load(CustomDiscussionComposer, {\n          user: app.session.user,\n          titlePlaceholder: app.translator.trans('core.forum.composer_discussion.title_placeholder'),\n      submitLabel: app.translator.trans('core.forum.composer_discussion.submit_button'),\n        });\n\n        app.composer.show();\n\n        return resolve(e);\n      } else {\n       // app.modal.show(LogInModal);\n \n        return reject();\n      }\n    });\n  }\n\n\n \n}\n/** ajax(){\n  fetch(app.forum.attribute('apiUrl') + '/profile-users-comments-models', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': app.session.csrfToken, // Uncomment if needed\n     \n    },\n    body: JSON.stringify({ data: { discussion: discussion , user_profile_id:m.route.param('username') } }),\n  })\n  .then(response => {\n    \n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  })\n  .then(data => {\n\n    const contentElement = document.querySelector('.UserPage-content');\n    if (contentElement) {\n      const wrapper = document.createElement('div'); // Create a wrapper div\n      handleAjaxResponse(wrapper,data)\n    /*contentElement.prepend(wrapper);\n      const newComment = m(CustomComment, {\n        username: data.data.username, // Adjust this according to your API response structure\n        commentText: commentText,\n        userPhoto: data.data.userPhoto // Adjust this according to your API response structure\n      });\n      \n      // Append the new comment to the UserPage-content\n      m.render(wrapper, newComment);\n    }*//*\n  }\n  errorMessage = 'Comment submitted successfully!';\n  commentText = ''; // Clear the textarea\n  m.redraw(); // Refresh the view to display success message\n})\n.catch(error => {\n\n  errorMessage = 'Error submitting comment: ' + error.message;\n  alert(errorMessage)\n  m.redraw(); // Refresh the view to display error\n}).finally(()=>{\n  alert(\"rrr\")\n  app.composer.hide();\n});} */","import ErrorText from 'flarum/common/components/ErrorText';\nimport app from 'flarum/forum/app';\n\n\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Post from 'flarum/common/models/Post';\n//import User from 'flarum/common/models/User';\n\nexport default function MyFormComponent() {\n  let errorMessage = '';\n  let commentText = '';\n \n\n  \n  function onsubmit(event) {\n\n   \n    event.preventDefault();\n\n    if (!commentText || commentText.length === 0) {\n      errorMessage = 'Comment cannot be empty!';\n      m.redraw(); // Refresh the view to display the error\n      return;\n    }\n\n    fetch(app.forum.attribute('apiUrl') + '/profile-users-comments-models', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRF-Token': app.session.csrfToken, // Uncomment if needed\n       \n      },\n      body: JSON.stringify({ data: { post_text: commentText , user_profile_id:m.route.param('username') } }),\n    })\n    .then(response => {\n      \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n\n      const contentElement = document.querySelector('.UserPage-content');\n      if (contentElement) {\n        const wrapper = document.createElement('div'); // Create a wrapper div\n        handleAjaxResponse(wrapper,data)\n      /*contentElement.prepend(wrapper);\n        const newComment = m(CustomComment, {\n          username: data.data.username, // Adjust this according to your API response structure\n          commentText: commentText,\n          userPhoto: data.data.userPhoto // Adjust this according to your API response structure\n        });\n        \n        // Append the new comment to the UserPage-content\n        m.render(wrapper, newComment);\n      }*/\n    }\n      errorMessage = 'Comment submitted successfully!';\n      commentText = ''; // Clear the textarea\n      m.redraw(); // Refresh the view to display success message\n    })\n    .catch(error => {\n   \n      errorMessage = 'Error submitting comment: ' + error.message;\n      alert(errorMessage)\n      m.redraw(); // Refresh the view to display error\n    });\n  }\n\n  return {\n    view: function() {\n      return m('form', { onsubmit: onsubmit , style: {\n        marginBottom: '10px',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        backgroundColor: '#f9f9f9',\n        textAlign: \"center\"\n      } }, [\n        m('textarea.FormControl', {\n          placeholder: 'Leave a comment...',\n          required: true,\n          value: commentText,\n          oninput: (e) => { commentText = e.target.value; }\n        }),\n        m('button.Button.Button--primary', { type: 'submit' ,\n        style: {\n          margin: '20px 0'}, \n          },  'Submit'\n        ),\n        errorMessage ? m(ErrorText, { message: errorMessage }) : null\n      ]);\n    }\n  };\n\n  \n\n// Assuming you have an AJAX response that contains post data.\nfunction handleAjaxResponse(wrapper,response) {\n  const postData = response.data//post; // Extract post data from your AJAX response\n  const userData = response.data.user_profile_id; // Extract user data, if necessary\nconsole.log(postData)\n  // Create a new Post model instance\n  /*const post = new Post({\n    postData.post_id,\n   \n    createdAt: new Date(postData.created_at),\n   // user: app.store.createRecord('users', app.us), // Attach user to the post\n  });*/\n\n  // Simulate a valid discussion object\nconst discussion = app.store.createRecord('discussions', {\n  id: 1,\n  title: 'Example Discussion',\n  canReply: () => true, // Ensure this method exists\n});\n// Create a new Post model instance\nconst newPost = {\n  id: postData.post_id,\n  content: postData.post_text,\n  discussion,\n  createdAt: new Date(postData.created_at),\n  user:app.session.user  // Associate the post with a user\n};\n\n  // Render the post using the CommentPost component\n  const postComponent = m(CommentPost, { newPost });\n\n  // Append the post component to the DOM\n  m.render(wrapper, postComponent);\n}\n\n\n}\n","// src/forum/extend.ts or src/forum/extend.js\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport CustomDiscussionComposer from './CustomDiscussionComposer';\nimport icon from 'flarum/common/helpers/icon';\n//import Wall from './Wall'; // Import your Wall component\n//import Extend from 'flarum/common/extenders';\nimport UserWall from './UserWall'\n\nexport function initializeItemWall() {\n  console.log('[leo/profile-users-comments] Initializing extension...');\n\n  \n  app.routes.userWall = {\n    path: '/u/:username/wall',\n    component: UserWall,\n  };\n  // Register the frontend route without creating a new instance of Routes\n /* new Extend.Routes()\n    .add('leo.profile-users-comments.wall', '/u/:username/wall', Wall);\n*/\n  // Extend UserPage to add the new \"Wall\" navigation item\n  extend(UserPage.prototype, 'navItems', function (items) {\n    \n    items.add('wall', \n      m('a', {\n        class: 'UserPage-navItem',\n        active:\"true\",\n      \n        //onclick: () => {m.route.set('/u/:username/wall',{username:m.route.param('username')})}\n        onclick: () => { \n          \n          m.route.set(`/u/${m.route.param('username')}/wall`);  \n         \n        }},\n        m('i', { class: 'icon Wall-icon fas fa-user  Button-icon' }) \n      , m('span', { class: 'Button-label' },\"Wall\") \n      ),\n      999\n    );\n   \n    let username = m.route.param('username');\nlet currenturl = `/u/${username}/wall`;\n    if(m.route.get().toString().trim() == currenturl.trim() ){\n    document.querySelector(\".item-wall\")?.classList.add(\"active\")\n    }else\n    document.querySelector(\".item-wall\")?.classList.remove(\"active\");\n  \n  });\n\n}\n","import app from 'flarum/forum/app';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport Post from 'flarum/common/models/Post';\nimport PostStreamState from 'flarum/forum/states/PostStreamState';\nexport default class PostsUserWall {\n\n  constructor(selectedDiscussion, stream) {\n  \n    this.selectedDiscussion = selectedDiscussion;  // Assigning the 'name' attribute to the class\n    this.stream = stream;    // Assigning the 'age' attribute to the class\n    console.log(this.selectedDiscussion)\n    console.log(this.selectedDiscussion)\n  }\n\n  oninit(vnode) {\n\n    this.selectedDiscussion = selectedDiscussion;  // Assigning the 'name' attribute to the class\n    this.stream = stream;    // Assigning the 'age' attribute to the class\n\n  }\n \n  \n\n\n \n  view() {\n   \n    if(this.selectedDiscussion && this.stream){\n    return m('div', { className: 'DiscussionPage-stream' }, \n                  m(PostStream, {\n                    discussion: this.selectedDiscussion,\n                    stream: this.stream,\n                    onPositionChange: this.positionChanged.bind(this) // Position handler\n                  })\n                \n    );\n                }\n  }\n\n  positionChanged() {\n    // Handle position change in the PostStream, e.g., infinite scrolling\n    console.log('Post stream position changed');\n  }\n}\n","// src/forum/extend.js\nimport app from 'flarum/forum/app';\nimport UserPage, { IUserPageAttrs } from 'flarum/forum/components/UserPage';\nimport { extend } from 'flarum/common/extend';\nimport MyDecomposerButton from './MyDecomposerButton';\nimport Wall from './Wall'; // Your modified Wall component\nimport Component from 'flarum/common/Component';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport Mithril from 'mithril';\nimport User from 'flarum/common/models/User';\nimport PostsUserWall from \"./PostsUserWall\"\n\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport Post from 'flarum/common/models/Post';\nimport PostStreamState from 'flarum/forum/states/PostStreamState';\n\nexport default class WallUserPage extends UserPage<IUserPageAttrs, DiscussionListState> {\n  composeButton: MyDecomposerButton | undefined;\n  postsUserWall: PostsUserWall | undefined;\n  \n  constructor(){\n    super();\n    // super()\n     this.discussion = null;\n     this.getIdThread();\n  \n   }\n  oninit(vnode: Mithril.Vnode<IUserPageAttrs, this>) {\n    super.oninit(vnode);\n    //this.postsUserWall = new PostsUserWall();\n    this.loadUser(m.route.param('username'));\n    this.composeButton = new MyDecomposerButton(); // Create an instance of CustomDiscussionButton\n   \n\n    app.redrawHandler = (newIdDiscission) => {\n\n       this.loadDiscussion(newIdDiscission)\n    };\n  \n    this.loading = true;\n    this.selectedDiscussion = null; // To track the selected discussion\n    this.stream = null; // PostStream data\n  }\n  requestParams(): Record<string, unknown> {\n    return {\n      bySlug: true,\n      //page: { near: 3 },\n    };\n  }\n\n  getIdThread(){\n    const getUsername =  m.route.param(\"username\") ;\n    this.loading = true;\n\n    app.request({\n      \n      method: 'GET',\n      //url:\"http://localhost:8888/api/wall-discussion-id\"\n      url: app.forum.attribute('apiUrl') + '/wall-discussion-id?username='+getUsername\n  })\n  .then(response => {\n      console.log('Discussions: ID', response);\n      this.loading = false;\n    \n      if(!response?.data?.id){return;} //dsiplay there is nothing to show\n      this.loadDiscussion(response[\"data\"][\"id\"]);\n     \n      \n  })\n  .catch(error => {\n  \n      console.error('Error fetching discussions:', error);\n      this.loading = false;\n  });\n  }\n  \n  loadDiscussion(discussions_wall) {\n    \n    let includedPosts: Post[] = [];\n    this.loading = true;\n    const params = this.requestParams();\n    ///const getUsername =  m.route.param(\"username\") ;\n  \n  \n   \n    app.store.find('discussions', discussions_wall , params\n   //{ filter: { \"discussions_wall\":getUsername },}//,=> cause headache on rertieving discussions  as Array or model Api \n    ).then(discussionsssssss => {\n      this.loading = false;\n     \n      //if(!discussions[0]){ m.redraw();return}\n   \n\n     \n      const discussion = discussionsssssss;\n      console.log(\"discussion payload\")\n      console.log(discussionsssssss.payload.included)\n      // Assign the discussion to the class property\n   \n      this.discussion = discussion;\n      if (discussion.payload && discussion.payload.included[0]) {\n\n        const discussionId =  discussion.id();\n      \n      \n        includedPosts = discussion.payload.included\n          .filter(\n            (record) =>\n              record.type === 'posts' &&\n              record.relationships &&\n              record.relationships.discussion &&\n              !Array.isArray(record.relationships.discussion.data)\n               &&    record.relationships.discussion.data.id === discussionId\n          )\n          // We can make this assertion because posts should be in the store,\n          // since they were in the discussion's payload.\n          .map((record) => app.store.getById<Post>('posts', record.id) as Post)\n          .sort((a: Post, b: Post) => a.number() - b.number())\n          .slice(0, 20);\n      }\n      console.log(\"posts\")\n      \n      console.log(includedPosts)\n      this.selectedDiscussion = discussion;\n      this.stream = new PostStreamState(discussion, includedPosts);//null //discussions.postStream();\n      \n      \n      this.postsUserWall = new PostsUserWall(this.selectedDiscussion,this.stream);\n    \n      m.redraw();\n    }).catch(error => {\n      console.error('Error loading discussions:', error);\n      this.loading = false;\n      m.redraw();\n    });\n  }\n  show(user: User): void {\n    super.show(user);\n\n    this.state = new DiscussionListState({\n      filter: { author: user.username() },\n      sort: 'newest',\n    });\n\n    this.state.refresh();\n  }\n\n  content() {\n    if (this.loading) {\n      return m(LoadingIndicator); // Show a loading indicator while discussions load\n    }else{\n    return  m('div',{ className: 'WallUserPage-container' },\n    \n    m('div', { className: 'DiscussionList-container' },\n    (this.discussion \n    && \n    this.stream) \n      ? \n      \n      \n             this.postsUserWall && this.postsUserWall.view()\n         \n        \n      : this.composeButton &&  this.composeButton.component()\n\n    )\n  );}\n  }\n\n\n}\n","import app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\nimport HeaderPrimary from 'flarum/forum/components/HeaderPrimary';\nimport Wall from './Wall'; // Adjust the path if necessary\nimport Extend from 'flarum/common/extenders';\nimport { initializeItemWall } from './NavitemWall';\n//export { default as extend } from './exstend';\nimport MyFormComponent from './MyFormComponent';\nimport MyDecomposerButton from './MyDecomposerButton';\n//import DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\n\n\n\napp.initializers.add('leo/profile-users-comments', () => {\n  console.log('[leo/profile-users-comments] Hello, forum!');\n// src/forum/index.tsx\n\n\ninitializeItemWall(); // Call the function to register the routes and extend the UserPage\n\n\n\n   extend(UserPage.prototype, 'oncreate', function(_,vnode) {\n    console.log('UserPage oncreate called');\n    // Search the DOM for the UserPage content element\n    const contentElement = vnode.dom.querySelector('.UserPage-content');\n    if (contentElement) {\n      const wrapper = document.createElement('div'); // Create a wrapper div\n      contentElement.prepend(wrapper); // Prepend the wrapper to the content element\n    \n      const myFormInstance = MyFormComponent();\n    // Render the component using m.render\n   // m.render(wrapper, myFormInstance.view()); // Bind the instance and call view\n\n  // let compose = new MyDecomposerButton();\n\n  //m.render(wrapper,compose.component())\n  \n \n    \n      /*\n      console.log('Found UserPage-content element');\n      \n      // Create a new textarea element\n      const textarea = document.createElement('textarea');\n      textarea.className = 'FormControl';  // Flarum's class for form controls\n      textarea.placeholder = 'Write your comment...';  // Adding placeholder text\n      \n      // Create a submit button\n      const button = document.createElement('button');\n      button.className = 'Button Button--primary';  // Flarum's button class with primary style\n      button.textContent = 'Submit';\n      \n      // Append the textarea and button to the content element\n      contentElement.appendChild(textarea);\n      contentElement.appendChild(button);\n\n      // Optional: Add an event listener for the button click\n      button.addEventListener('click', () => {\n        const commentText = textarea.value;\n        console.log('Comment submitted:', commentText);\n        // Add your comment submission logic here\n      });*/\n      \n    }\n  });\n});\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/ErrorText'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/components/DiscussionComposer'];","module.exports = flarum.core.compat['forum/components/PostStream'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['forum/states/DiscussionListState'];","module.exports = flarum.core.compat['forum/states/PostStreamState'];","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["app","initializers","add","console","log","DiscussionComposer","Stream","CustomDiscussionComposer","_DiscussionComposer","apply","arguments","_inheritsLoose","initAttrs","attrs","call","titlePlaceholder","submitLabel","_proto","prototype","oninit","vnode","fields","title","content","tags","discussions_wall","data","onsubmit","loading","composer","alert","store","createRecord","save","then","discussion","redrawHandler","id","hide","error","default","Button","CustomDiscussionButton","component","icon","className","onclick","action","bind","e","preventDefault","Promise","resolve","reject","session","user","load","translator","trans","show","ErrorText","CommentPost","Post","MyFormComponent","errorMessage","commentText","event","length","m","redraw","fetch","forum","attribute","method","headers","csrfToken","body","JSON","stringify","post_text","user_profile_id","route","param","response","ok","Error","json","contentElement","document","querySelector","wrapper","createElement","handleAjaxResponse","message","view","style","marginBottom","padding","border","borderRadius","backgroundColor","textAlign","placeholder","required","value","oninput","target","type","margin","postData","userData","canReply","newPost","post_id","createdAt","Date","created_at","postComponent","render","UserPage","extend","UserWall","initializeItemWall","routes","userWall","path","items","_document$querySelect2","active","set","username","currenturl","get","toString","trim","_document$querySelect","classList","remove","PostStream","PostsUserWall","selectedDiscussion","stream","onPositionChange","positionChanged","MyDecomposerButton","DiscussionListState","LoadingIndicator","PostStreamState","WallUserPage","_UserPage","_this","composeButton","postsUserWall","getIdThread","_this2","loadUser","newIdDiscission","loadDiscussion","requestParams","bySlug","_this3","getUsername","request","url","_response$data","_this4","includedPosts","params","find","discussionsssssss","payload","included","discussionId","filter","record","relationships","Array","isArray","map","getById","sort","a","b","number","slice","state","author","refresh","_","dom","prepend","myFormInstance","setPrototypeOf","t","o","Object","create","constructor","_setPrototypeOf","__proto__"],"sourceRoot":""}