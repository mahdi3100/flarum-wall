{"version":3,"file":"src_core_forum_components_DiscussionComposer_js.js","mappings":"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","sources":["webpack://@leomahdi/flarum-wall/./src/core/forum/components/DiscussionComposer.js"],"sourcesContent":["import app from '../../forum/app';\nimport ComposerBody from './ComposerBody';\nimport extractText from '../../common/utils/extractText';\nimport Stream from '../../common/utils/Stream';\n\n/**\n * The `DiscussionComposer` component displays the composer content for starting\n * a new discussion. It adds a text field as a header control so the user can\n * enter the title of their discussion. It also overrides the `submit` and\n * `willExit` actions to account for the title.\n *\n * ### Attrs\n *\n * - All of the attrs for ComposerBody\n * - `titlePlaceholder`\n */\nexport default class DiscussionComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.placeholder = attrs.placeholder || extractText(app.translator.trans('core.forum.composer_discussion.body_placeholder'));\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_discussion.submit_button');\n    attrs.confirmExit = attrs.confirmExit || extractText(app.translator.trans('core.forum.composer_discussion.discard_confirmation'));\n    attrs.titlePlaceholder = attrs.titlePlaceholder || extractText(app.translator.trans('core.forum.composer_discussion.title_placeholder'));\n    attrs.className = 'ComposerBody--discussion';\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.composer.fields.title = this.composer.fields.title || Stream('');\n\n    /**\n     * The value of the title input.\n     *\n     * @type {Function}\n     */\n    this.title = this.composer.fields.title;\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n\n    items.add('title', <h3>{app.translator.trans('core.forum.composer_discussion.title')}</h3>, 100);\n\n    items.add(\n      'discussionTitle',\n      <h3>\n        <input\n          className=\"FormControl\"\n          bidi={this.title}\n          placeholder={this.attrs.titlePlaceholder}\n          disabled={!!this.attrs.disabled}\n          onkeydown={this.onkeydown.bind(this)}\n        />\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Handle the title input's keydown event. When the return key is pressed,\n   * move the focus to the start of the text editor.\n   *\n   * @param {KeyboardEvent} e\n   */\n  onkeydown(e) {\n    if (e.which === 13) {\n      // Return\n      e.preventDefault();\n      this.composer.editor.moveCursorTo(0);\n    }\n\n    e.redraw = false;\n  }\n\n  hasChanges() {\n    return this.title() || this.composer.fields.content();\n  }\n\n  /**\n   * Get the data to submit to the server when the discussion is saved.\n   *\n   * @return {Record<string, unknown>}\n   */\n  data() {\n    return {\n      title: this.title(),\n      content: this.composer.fields.content(),\n    };\n  }\n\n  onsubmit() {\n    this.loading = true;\n\n    const data = this.data();\n\n    app.store\n      .createRecord('discussions')\n      .save(data)\n      .then((discussion) => {\n        this.composer.hide();\n        app.discussions.refresh();\n        m.route.set(app.route.discussion(discussion));\n      }, this.loaded.bind(this));\n  }\n}\n"],"names":["app","ComposerBody","extractText","Stream","DiscussionComposer","_ComposerBody","apply","arguments","_inheritsLoose","initAttrs","attrs","call","placeholder","translator","trans","submitLabel","confirmExit","titlePlaceholder","className","_proto","prototype","oninit","vnode","composer","fields","title","headerItems","items","add","m","bidi","disabled","onkeydown","bind","e","which","preventDefault","editor","moveCursorTo","redraw","hasChanges","content","data","onsubmit","_this","loading","store","createRecord","save","then","discussion","hide","discussions","refresh","route","set","loaded","default"],"sourceRoot":""}