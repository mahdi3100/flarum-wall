{"version":3,"file":"src_core_forum_components_SignUpModal_tsx-_c6e71.js","mappings":"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","sources":["webpack://@leomahdi/flarum-wall/./src/core/forum/components/SignUpModal.tsx"],"sourcesContent":["import app from '../../forum/app';\nimport FormModal, { IFormModalAttrs } from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\nimport type Mithril from 'mithril';\n\nexport interface ISignupModalAttrs extends IFormModalAttrs {\n  username?: string;\n  email?: string;\n  password?: string;\n  token?: string;\n  provided?: string[];\n}\n\nexport type SignupBody = {\n  username: string;\n  email: string;\n} & ({ token: string } | { password: string });\n\nexport default class SignUpModal<CustomAttrs extends ISignupModalAttrs = ISignupModalAttrs> extends FormModal<CustomAttrs> {\n  /**\n   * The value of the username input.\n   */\n  username!: Stream<string>;\n\n  /**\n   * The value of the email input.\n   */\n  email!: Stream<string>;\n\n  /**\n   * The value of the password input.\n   */\n  password!: Stream<string>;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.username = Stream(this.attrs.username || '');\n    this.email = Stream(this.attrs.email || '');\n    this.password = Stream(this.attrs.password || '');\n  }\n\n  className() {\n    return 'Modal--small SignUpModal';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.sign_up.title');\n  }\n\n  content() {\n    return [<div className=\"Modal-body\">{this.body()}</div>, <div className=\"Modal-footer\">{this.footer()}</div>];\n  }\n\n  isProvided(field: string): boolean {\n    return this.attrs.provided?.includes(field) ?? false;\n  }\n\n  body() {\n    return [!this.attrs.token && <LogInButtons />, <div className=\"Form Form--centered\">{this.fields().toArray()}</div>];\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const usernameLabel = extractText(app.translator.trans('core.forum.sign_up.username_placeholder'));\n    const emailLabel = extractText(app.translator.trans('core.forum.sign_up.email_placeholder'));\n    const passwordLabel = extractText(app.translator.trans('core.forum.sign_up.password_placeholder'));\n\n    items.add(\n      'username',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"username\"\n          type=\"text\"\n          placeholder={usernameLabel}\n          aria-label={usernameLabel}\n          bidi={this.username}\n          disabled={this.loading || this.isProvided('username')}\n        />\n      </div>,\n      30\n    );\n\n    items.add(\n      'email',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"email\"\n          type=\"email\"\n          placeholder={emailLabel}\n          aria-label={emailLabel}\n          bidi={this.email}\n          disabled={this.loading || this.isProvided('email')}\n        />\n      </div>,\n      20\n    );\n\n    if (!this.attrs.token) {\n      items.add(\n        'password',\n        <div className=\"Form-group\">\n          <input\n            className=\"FormControl\"\n            name=\"password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n            placeholder={passwordLabel}\n            aria-label={passwordLabel}\n            bidi={this.password}\n            disabled={this.loading}\n          />\n        </div>,\n        10\n      );\n    }\n\n    items.add(\n      'submit',\n      <div className=\"Form-group\">\n        <Button className=\"Button Button--primary Button--block\" type=\"submit\" loading={this.loading}>\n          {app.translator.trans('core.forum.sign_up.submit_button')}\n        </Button>\n      </div>,\n      -10\n    );\n\n    return items;\n  }\n\n  footer() {\n    return [\n      <p className=\"SignUpModal-logIn\">\n        {app.translator.trans('core.forum.sign_up.log_in_text', {\n          a: <Button className=\"Button Button--text Button--link\" onclick={this.logIn.bind(this)} />,\n        })}\n      </p>,\n    ];\n  }\n\n  /**\n   * Open the log in modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   */\n  logIn() {\n    const attrs = {\n      identification: this.email() || this.username(),\n    };\n\n    app.modal.show(() => import('./LogInModal'), attrs);\n  }\n\n  onready() {\n    if (this.attrs.username && !this.attrs.email) {\n      this.$('[name=email]').select();\n    } else {\n      this.$('[name=username]').select();\n    }\n  }\n\n  onsubmit(e: SubmitEvent) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const body = this.submitData();\n\n    app\n      .request({\n        url: app.forum.attribute('baseUrl') + '/register',\n        method: 'POST',\n        body,\n        errorHandler: this.onerror.bind(this),\n      })\n      .then(() => window.location.reload(), this.loaded.bind(this));\n  }\n\n  /**\n   * Get the data that should be submitted in the sign-up request.\n   */\n  submitData(): SignupBody {\n    const authData = this.attrs.token ? { token: this.attrs.token } : { password: this.password() };\n\n    const data = {\n      username: this.username(),\n      email: this.email(),\n      ...authData,\n    };\n\n    return data;\n  }\n}\n"],"names":["app","FormModal","Button","LogInButtons","extractText","ItemList","Stream","SignUpModal","_FormModal","_this","_len","arguments","length","args","Array","_key","call","apply","concat","username","email","password","_inheritsLoose","_proto","prototype","oninit","vnode","attrs","className","title","translator","trans","content","m","body","footer","isProvided","field","_this$attrs$provided$","_this$attrs$provided","provided","includes","token","fields","toArray","items","usernameLabel","emailLabel","passwordLabel","add","name","type","placeholder","bidi","disabled","loading","autocomplete","a","onclick","logIn","bind","identification","modal","show","onready","$","select","onsubmit","e","preventDefault","submitData","request","url","forum","attribute","method","errorHandler","onerror","then","window","location","reload","loaded","authData","data","_extends","default"],"sourceRoot":""}