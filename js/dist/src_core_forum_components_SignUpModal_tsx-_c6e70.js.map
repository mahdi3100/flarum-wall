{"version":3,"file":"src_core_forum_components_SignUpModal_tsx-_c6e70.js","mappings":"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","sources":["webpack://@leo/flarum-wall/./src/core/forum/components/LogInButtons.js","webpack://@leo/flarum-wall/./src/core/forum/components/SignUpModal.tsx"],"sourcesContent":["import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `LogInButtons` component displays a collection of social login buttons.\n */\nexport default class LogInButtons extends Component {\n  view() {\n    return <div className=\"LogInButtons\">{this.items().toArray()}</div>;\n  }\n\n  /**\n   * Build a list of LogInButton components.\n   *\n   * @return {ItemList<import('mithril').Children>}\n   */\n  items() {\n    return new ItemList();\n  }\n}\n","import app from '../../forum/app';\nimport FormModal, { IFormModalAttrs } from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\nimport type Mithril from 'mithril';\n\nexport interface ISignupModalAttrs extends IFormModalAttrs {\n  username?: string;\n  email?: string;\n  password?: string;\n  token?: string;\n  provided?: string[];\n}\n\nexport type SignupBody = {\n  username: string;\n  email: string;\n} & ({ token: string } | { password: string });\n\nexport default class SignUpModal<CustomAttrs extends ISignupModalAttrs = ISignupModalAttrs> extends FormModal<CustomAttrs> {\n  /**\n   * The value of the username input.\n   */\n  username!: Stream<string>;\n\n  /**\n   * The value of the email input.\n   */\n  email!: Stream<string>;\n\n  /**\n   * The value of the password input.\n   */\n  password!: Stream<string>;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.username = Stream(this.attrs.username || '');\n    this.email = Stream(this.attrs.email || '');\n    this.password = Stream(this.attrs.password || '');\n  }\n\n  className() {\n    return 'Modal--small SignUpModal';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.sign_up.title');\n  }\n\n  content() {\n    return [<div className=\"Modal-body\">{this.body()}</div>, <div className=\"Modal-footer\">{this.footer()}</div>];\n  }\n\n  isProvided(field: string): boolean {\n    return this.attrs.provided?.includes(field) ?? false;\n  }\n\n  body() {\n    return [!this.attrs.token && <LogInButtons />, <div className=\"Form Form--centered\">{this.fields().toArray()}</div>];\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const usernameLabel = extractText(app.translator.trans('core.forum.sign_up.username_placeholder'));\n    const emailLabel = extractText(app.translator.trans('core.forum.sign_up.email_placeholder'));\n    const passwordLabel = extractText(app.translator.trans('core.forum.sign_up.password_placeholder'));\n\n    items.add(\n      'username',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"username\"\n          type=\"text\"\n          placeholder={usernameLabel}\n          aria-label={usernameLabel}\n          bidi={this.username}\n          disabled={this.loading || this.isProvided('username')}\n        />\n      </div>,\n      30\n    );\n\n    items.add(\n      'email',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"email\"\n          type=\"email\"\n          placeholder={emailLabel}\n          aria-label={emailLabel}\n          bidi={this.email}\n          disabled={this.loading || this.isProvided('email')}\n        />\n      </div>,\n      20\n    );\n\n    if (!this.attrs.token) {\n      items.add(\n        'password',\n        <div className=\"Form-group\">\n          <input\n            className=\"FormControl\"\n            name=\"password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n            placeholder={passwordLabel}\n            aria-label={passwordLabel}\n            bidi={this.password}\n            disabled={this.loading}\n          />\n        </div>,\n        10\n      );\n    }\n\n    items.add(\n      'submit',\n      <div className=\"Form-group\">\n        <Button className=\"Button Button--primary Button--block\" type=\"submit\" loading={this.loading}>\n          {app.translator.trans('core.forum.sign_up.submit_button')}\n        </Button>\n      </div>,\n      -10\n    );\n\n    return items;\n  }\n\n  footer() {\n    return [\n      <p className=\"SignUpModal-logIn\">\n        {app.translator.trans('core.forum.sign_up.log_in_text', {\n          a: <Button className=\"Button Button--text Button--link\" onclick={this.logIn.bind(this)} />,\n        })}\n      </p>,\n    ];\n  }\n\n  /**\n   * Open the log in modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   */\n  logIn() {\n    const attrs = {\n      identification: this.email() || this.username(),\n    };\n\n    app.modal.show(() => import('./LogInModal'), attrs);\n  }\n\n  onready() {\n    if (this.attrs.username && !this.attrs.email) {\n      this.$('[name=email]').select();\n    } else {\n      this.$('[name=username]').select();\n    }\n  }\n\n  onsubmit(e: SubmitEvent) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const body = this.submitData();\n\n    app\n      .request({\n        url: app.forum.attribute('baseUrl') + '/register',\n        method: 'POST',\n        body,\n        errorHandler: this.onerror.bind(this),\n      })\n      .then(() => window.location.reload(), this.loaded.bind(this));\n  }\n\n  /**\n   * Get the data that should be submitted in the sign-up request.\n   */\n  submitData(): SignupBody {\n    const authData = this.attrs.token ? { token: this.attrs.token } : { password: this.password() };\n\n    const data = {\n      username: this.username(),\n      email: this.email(),\n      ...authData,\n    };\n\n    return data;\n  }\n}\n"],"names":["Component","ItemList","LogInButtons","_Component","apply","arguments","_inheritsLoose","_proto","prototype","view","m","className","items","toArray","default","app","FormModal","Button","extractText","Stream","SignUpModal","_FormModal","_this","_len","length","args","Array","_key","call","concat","username","email","password","oninit","vnode","attrs","title","translator","trans","content","body","footer","isProvided","field","_this$attrs$provided$","_this$attrs$provided","provided","includes","token","fields","usernameLabel","emailLabel","passwordLabel","add","name","type","placeholder","bidi","disabled","loading","autocomplete","a","onclick","logIn","bind","identification","modal","show","onready","$","select","onsubmit","e","preventDefault","submitData","request","url","forum","attribute","method","errorHandler","onerror","then","window","location","reload","loaded","authData","data","_extends"],"sourceRoot":""}