{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@leo/profile-users-comments/./src/common/index.ts","webpack://@leo/profile-users-comments/./src/forum/CustomDiscussionComposer.js","webpack://@leo/profile-users-comments/./src/forum/MyDecomposerButton.ts","webpack://@leo/profile-users-comments/./src/forum/NavitemWall.ts","webpack://@leo/profile-users-comments/./src/forum/PostsUserWall.ts","webpack://@leo/profile-users-comments/./src/forum/UserWall.tsx","webpack://@leo/profile-users-comments/./src/forum/index.tsx","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/app']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/components/Button']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/extend']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/app']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@leo/profile-users-comments/external root \"flarum.core.compat['forum/states/PostStreamState']\"","webpack://@leo/profile-users-comments/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@leo/profile-users-comments/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@leo/profile-users-comments/webpack/bootstrap","webpack://@leo/profile-users-comments/webpack/runtime/compat get default export","webpack://@leo/profile-users-comments/webpack/runtime/define property getters","webpack://@leo/profile-users-comments/webpack/runtime/hasOwnProperty shorthand","webpack://@leo/profile-users-comments/webpack/runtime/make namespace object","webpack://@leo/profile-users-comments/./forum.ts"],"sourcesContent":["import app from 'flarum/common/app';\n\napp.initializers.add('leo/profile-users-comments', () => {\n  console.log('[leo/profile-users-comments] Hello, forum and admin!');\n});\n","import app from 'flarum/forum/app';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class CustomDiscussionComposer extends DiscussionComposer {\n\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.titlePlaceholder = \"Create a thread ! \"\n    attrs.submitLabel = \"Create a thread  ! \"\n\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Initialize streams for title and content\n    this.fields = {\n      title: Stream(''),\n      content: Stream(''),\n      tags: Stream([]),\n      discussions_wall: Stream(1)\n    };\n  }\n  data() {\n    let data = super.data();\n\n    //inject discussions_wall in discussions Obj\n    data.discussions_wall = this.fields.discussions_wall();\n    return data;\n  }\n\n\n  onsubmit() {\n    this.loading = true;\n\n    const title = this.composer.fields.title();\n    const content = this.composer.fields.content();\n\n    // Basic validation (you can expand this)\n    if (!title || !content) {\n      alert('Please fill in both the title and content.');\n      return;\n    }\n\n    const data = this.data();\n\n    console.log(data)\n    // Create and save the discussion\n    app.store\n      .createRecord('discussions')\n      .save(data)\n      .then((discussion) => {\n        // After success, redirect to the new discussion\n        //this is the daufalt m.route.set(app.route.discussion(discussion));\n        //I i tried this but it did not work m.route.set(app.route.userWall());\n        //I tried this but it did not re-render m.route.set(`/u/${m.route.param('username')}/wall`,null); \n        //So i used EventEmitter :\n        if (app.redrawHandler) {\n          app.redrawHandler(discussion.id());  // Trigger redraw via the global handler\n        }\n\n        // Hide the composer\n        app.composer.hide();\n\n        console.log('Discussion created successfully:', discussion);\n      })\n      .catch((error) => {\n        app.composer.hide();\n        console.error('Error creating discussion:', error);\n        alert('There was an error creating the discussion.');\n      });\n  }\n\n\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\n\nimport CustomDiscussionComposer from './CustomDiscussionComposer';\n\n\n/**\n * Button Component that shown in Wall Content => to invoke CustomDiscussionComposer \n */\nexport default class CustomDiscussionButton {\n  /*view() {\n    return (\n      m('button.Post.ReplyPlaceholder', { onclick: this.action.bind(this) }, [\n      m('div.Post-container', [\n          /*m('div.Post-side', [\n              m(Avatar, { user: app.session.user, className: 'Post-avatar' })\n          ]),*//*\n  m('div.Post-main', [\n    m('span.Post-header', \"Create a thread ! \")\n])\n])\n]))\n}*/\n\n  component() {\n\n    return Button.component(\n      {\n        icon: 'fas fa-pen',\n        className: 'Button Button--primary IndexPage-newDiscussion',\n        onclick: this.action.bind(this),\n        //disabled: !this.canStartDiscussion,\n      },\n      \"Create a thread !\");\n  }\n  action(e: any) {\n    e.preventDefault();\n\n    return new Promise((resolve, reject) => {\n      if (app.session.user) {\n\n        app.composer.load(CustomDiscussionComposer, {\n          user: app.session.user,\n          titlePlaceholder: app.translator.trans('core.forum.composer_discussion.title_placeholder'),\n          submitLabel: app.translator.trans('core.forum.composer_discussion.submit_button'),\n        });\n\n        app.composer.show();\n\n        return resolve(e);\n      } else {\n        //To add later=> app.modal.show(LogInModal);\n\n        return reject();\n      }\n    });\n  }\n\n\n\n}\n","// src/forum/extend.ts or src/forum/extend.js\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport { extend } from 'flarum/common/extend';\n\n\n\nimport UserWall from './UserWall'\n\nexport function initializeItemWall() {\n  console.log('[leo/profile-users-comments] Initializing extension...');\n\n  //Register the frontend route without creating a new instance of Routes\n  app.routes.userWall = {\n    path: '/u/:username/wall',\n    component: UserWall,\n  };\n\n  // Extend UserPage to add the new \"Wall\" navigation item\n  extend(UserPage.prototype, 'navItems', function (items) {\n\n    items.add('wall',\n      m('a', {\n        class: 'UserPage-navItem',\n        active: \"true\",\n\n\n        onclick: () => {\n\n          m.route.set(`/u/${m.route.param('username')}/wall`);\n\n        }\n      },\n        m('i', { class: 'icon Wall-icon fas fa-user  Button-icon' })\n        , m('span', { class: 'Button-label' }, \"Wall\")\n      ),\n      110\n    );\n\n    //Inject Css class for Active Link Item\n    const username = m.route.param('username');\n    const currenturl = `/u/${username}/wall`;\n    if (m.route.get().toString().trim() == currenturl.trim()) {\n      document.querySelector(\".item-wall\")?.classList.add(\"active\")\n    } else\n      document.querySelector(\".item-wall\")?.classList.remove(\"active\");\n\n  });\n\n}\n","import app from 'flarum/forum/app';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport Post from 'flarum/common/models/Post';\nimport PostStreamState from 'flarum/forum/states/PostStreamState';\nimport Discussion from 'flarum/common/models/Discussion';\nimport { ApiResponseSingle } from 'flarum/common/Store';\nimport Model from 'flarum/common/Model';\nexport default class PostsUserWall {\n  selectedDiscussion: Discussion;\n  stream: PostStreamState;\n\n\n  constructor(selectedDiscussion: Discussion, stream: PostStreamState) {\n\n    this.selectedDiscussion = selectedDiscussion;  // Assigning the 'name' attribute to the class\n    this.stream = stream;    // Assigning the 'age' attribute to the class\n\n  }\n  /*\n    oninit(vnode) {\n  \n      this.selectedDiscussion = selectedDiscussion;  // Assigning the 'name' attribute to the class\n      this.stream = stream;    // Assigning the 'age' attribute to the class\n  \n    }*/\n\n\n\n\n\n  view() {\n\n   \n      return m('div', { className: 'DiscussionPage-stream' },\n        m(PostStream, {\n          discussion: this.selectedDiscussion,\n          stream: this.stream,\n          //onPositionChange: this.positionChanged.bind(this) \n        })\n\n      );\n    \n  }\n\n\n}\n","// src/forum/extend.js\nimport app from 'flarum/forum/app';\nimport UserPage, { IUserPageAttrs } from 'flarum/forum/components/UserPage';\nimport { extend } from 'flarum/common/extend';\nimport MyDecomposerButton from './MyDecomposerButton';\n\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport Mithril from 'mithril';\nimport User from 'flarum/common/models/User';\nimport PostsUserWall from \"./PostsUserWall\"\n\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport Post from 'flarum/common/models/Post';\nimport PostStreamState from 'flarum/forum/states/PostStreamState';\nimport Discussion from 'flarum/common/models/Discussion';\n\n\nimport { ApiResponseSingle } from 'flarum/common/Store';\nimport Model from 'flarum/common/Model';\nexport default class WallUserPage extends UserPage<IUserPageAttrs, DiscussionListState> {\n  composeButton: MyDecomposerButton | undefined;\n  postsUserWall: PostsUserWall | undefined;\n\n  loading: boolean = false;\n  selectedDiscussion: Discussion | undefined;\n  stream: PostStreamState | undefined;\n\n\n  constructor() {\n    super();\n\n\n    this.getIdThread();\n\n  }\n  oninit(vnode: Mithril.Vnode<IUserPageAttrs, this>) {\n    super.oninit(vnode);\n\n\n    this.loadUser(m.route.param('username'));\n\n    // Create an instance of CustomDiscussionButton\n    this.composeButton = new MyDecomposerButton();\n\n    //For redrawing this component when new discussion is being submitted. fired by CustomDiscussionComposer\n    app.redrawHandler = (newIdDiscission) => {\n      this.loadDiscussion(newIdDiscission)\n    };\n\n    this.loading = true;\n\n  }\n  requestParams(): Record<string, unknown> {\n    return {\n      bySlug: true,\n      //page: { near: 3 },\n    };\n  }\n\n  //Retrieve the ID Thread conversation !  \n  getIdThread() {\n    const getUsername = m.route.param(\"username\");\n    this.loading = true;\n\n    app.request({\n\n      method: 'GET',\n      //url:\"http://localhost:8888/api/wall-discussion-id\"\n      url: app.forum.attribute('apiUrl') + '/wall-discussion-id?username=' + getUsername\n    })\n      .then(response => {\n        console.log('Discussions: ID', response);\n        this.loading = false;\n\n        if (!response?.data?.id) { return; } //dsiplay this.composeButton.component()\n\n\n        this.loadDiscussion(response.data.id);\n\n\n      })\n      .catch(error => {\n\n        console.error('Error fetching discussions:', error);\n        this.loading = false;\n      });\n  }\n\n  //Retreive Discussion with app.store.find(\"discussion\",ID)\n  loadDiscussion(discussions_wall: string) {\n\n    let includedPosts: Post[] = [];\n    this.loading = true;\n    const params = this.requestParams();\n    ///const getUsername =  m.route.param(\"username\") ;\n\n    app.store.find('discussions', discussions_wall, params\n\n      //{ filter: { \"discussions_wall\":getUsername },}\n      //cause me headache on retrieving discussions  as Array or model Api therefore i used getIdThread() first\n    ).then((discussion: ApiResponseSingle<Model>) => {\n\n      this.loading = false;\n\n      if (discussion.payload && discussion.payload.included) {\n\n        const discussionId = discussion.id();\n\n        //retrieving Posts of this sepecific Discussion\n        includedPosts = discussion.payload.included\n          .filter(\n            (record) =>\n              record.type === 'posts' &&\n              record.relationships &&\n              record.relationships.discussion &&\n              !Array.isArray(record.relationships.discussion.data)\n              && record.relationships.discussion.data.id === discussionId\n          )\n          .map((record) => app.store.getById<Post>('posts', record.id) as Post)\n          .sort((a: Post, b: Post) => a.number() - b.number())\n          .slice(0, 20);\n      }\n\n      this.selectedDiscussion = discussion as Discussion;\n      this.stream = new PostStreamState(discussion, includedPosts);//null //discussions.postStream();\n\n\n      this.postsUserWall = new PostsUserWall(this.selectedDiscussion, this.stream);\n\n      m.redraw();\n    }).catch(error => {\n      console.error('Error loading discussions:', error);\n      this.loading = false;\n      m.redraw();\n    });\n  }\n\n\n  show(user: User): void {\n    super.show(user);\n\n    /*\n    this.state = new DiscussionListState({\n      filter: { author: user.username() },\n      sort: 'newest',\n    });\n\n    this.state.refresh();\n    */\n  }\n\n  content() {\n    if (this.loading) {\n      return m(LoadingIndicator);\n    } else {\n      return m('div', { className: 'WallUserPage-container' },\n\n        m('div', { className: 'DiscussionList-container' },\n          (this.selectedDiscussion\n            &&\n            this.stream)\n            ? this.postsUserWall && this.postsUserWall.view()\n\n            : this.composeButton && this.composeButton.component()\n\n        )\n      );\n    }\n  }\n\n\n}\n","import app from 'flarum/forum/app';\nimport { initializeItemWall } from './NavitemWall';\n\n\napp.initializers.add('leo/profile-users-comments', () => {\n  console.log('[leo/profile-users-comments] Hello, forum!');\n\n\n// Call the function to register the routes and extend the UserPage\ninitializeItemWall(); \n\n\n \n});\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/DiscussionComposer'];","module.exports = flarum.core.compat['forum/components/PostStream'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['forum/states/PostStreamState'];","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["app","initializers","add","console","log","DiscussionComposer","Stream","CustomDiscussionComposer","_DiscussionComposer","apply","arguments","_inheritsLoose","initAttrs","attrs","call","titlePlaceholder","submitLabel","_proto","prototype","oninit","vnode","fields","title","content","tags","discussions_wall","data","onsubmit","loading","composer","alert","store","createRecord","save","then","discussion","redrawHandler","id","hide","error","default","Button","CustomDiscussionButton","component","icon","className","onclick","action","bind","e","preventDefault","Promise","resolve","reject","session","user","load","translator","trans","show","UserPage","extend","UserWall","initializeItemWall","routes","userWall","path","items","_document$querySelect2","m","active","route","set","param","username","currenturl","get","toString","trim","_document$querySelect","document","querySelector","classList","remove","PostStream","PostsUserWall","selectedDiscussion","stream","view","MyDecomposerButton","LoadingIndicator","PostStreamState","WallUserPage","_UserPage","_this","composeButton","postsUserWall","getIdThread","_this2","loadUser","newIdDiscission","loadDiscussion","requestParams","bySlug","_this3","getUsername","request","method","url","forum","attribute","response","_response$data","_this4","includedPosts","params","find","payload","included","discussionId","filter","record","type","relationships","Array","isArray","map","getById","sort","a","b","number","slice","redraw","setPrototypeOf","t","o","Object","create","constructor","_setPrototypeOf","__proto__"],"sourceRoot":""}