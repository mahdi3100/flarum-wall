{"version":3,"file":"src_core_forum_components_PostStream_js.js","mappings":"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","sources":["webpack://@leomahdi/flarum-wall/./src/core/forum/components/LoadingPost.tsx","webpack://@leomahdi/flarum-wall/./src/core/forum/components/PostStream.js","webpack://@leomahdi/flarum-wall/./src/core/forum/components/PostType.tsx","webpack://@leomahdi/flarum-wall/./src/core/forum/components/ReplyPlaceholder.tsx"],"sourcesContent":["import Component, { type ComponentAttrs } from '../../common/Component';\nimport Avatar from '../../common/components/Avatar';\nimport classList from '../../common/utils/classList';\n\nexport interface ILoadingPostAttrs extends ComponentAttrs {}\n\n/**\n * The `LoadingPost` component shows a placeholder that looks like a post,\n * indicating that the post is loading.\n */\nexport default class LoadingPost<CustomAttrs extends ILoadingPostAttrs = ILoadingPostAttrs> extends Component<CustomAttrs> {\n  view() {\n    return (\n      <div className={classList(this.attrs.className, 'Post CommentPost LoadingPost')}>\n        <header className=\"Post-header\">\n          <Avatar user={null} className=\"PostUser-avatar\" />\n          <div className=\"fakeText\" />\n        </header>\n\n        <div className=\"Post-body\">\n          <div className=\"fakeText\" />\n          <div className=\"fakeText\" />\n          <div className=\"fakeText\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import app from '../../forum/app';\nimport Component from '../../common/Component';\nimport ScrollListener from '../../common/utils/ScrollListener';\nimport LoadingPost from './LoadingPost';\nimport ReplyPlaceholder from './ReplyPlaceholder';\nimport Button from '../../common/components/Button';\nimport ItemList from '../../common/utils/ItemList';\nimport PostType from './PostType';\n\n/**\n * The `PostStream` component displays an infinitely-scrollable wall of posts in\n * a discussion. Posts that have not loaded will be displayed as placeholders.\n *\n * ### Attrs\n *\n * - `discussion`\n * - `stream`\n * - `targetPost`\n * - `onPositionChange`\n */\nexport default class PostStream extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.discussion = this.attrs.discussion;\n    this.stream = this.attrs.stream;\n\n    this.scrollListener = new ScrollListener(this.onscroll.bind(this));\n  }\n\n  view() {\n    let lastTime;\n\n    const viewingEnd = this.stream.viewingEnd();\n    const posts = this.stream.posts();\n    const postIds = this.discussion.postIds();\n\n    const postFadeIn = (vnode) => {\n      $(vnode.dom).addClass('fadeIn');\n      // 500 is the duration of the fadeIn CSS animation + 100ms,\n      // so the animation has time to complete\n      setTimeout(() => $(vnode.dom).removeClass('fadeIn'), 500);\n    };\n\n    const items = posts.map((post, i) => {\n      let content;\n      const attrs = { 'data-index': this.stream.visibleStart + i };\n\n      if (post) {\n        const time = post.createdAt();\n        content = <PostType post={post} />;\n\n        attrs.key = 'post' + post.id();\n        attrs.oncreate = postFadeIn;\n        attrs['data-time'] = time.toISOString();\n        attrs['data-number'] = post.number();\n        attrs['data-id'] = post.id();\n        attrs['data-type'] = post.contentType();\n\n        // If the post before this one was more than 4 days ago, we will\n        // display a 'time gap' indicating how long it has been in between\n        // the posts.\n        const dt = time - lastTime;\n\n        if (dt > 1000 * 60 * 60 * 24 * 4) {\n          content = [\n            <div className=\"PostStream-timeGap\">\n              <span>{app.translator.trans('core.forum.post_stream.time_lapsed_text', { period: dayjs().add(dt, 'ms').fromNow(true) })}</span>\n            </div>,\n            content,\n          ];\n        }\n\n        lastTime = time;\n      } else {\n        attrs.key = 'post' + postIds[this.stream.visibleStart + i];\n\n        content = <LoadingPost />;\n      }\n\n      return (\n        <div className=\"PostStream-item\" {...attrs}>\n          {content}\n        </div>\n      );\n    });\n\n    if (!viewingEnd && posts[this.stream.visibleEnd - this.stream.visibleStart - 1]) {\n      items.push(\n        <div className=\"PostStream-loadMore\" key=\"loadMore\">\n          <Button className=\"Button\" onclick={this.stream.loadNext.bind(this.stream)}>\n            {app.translator.trans('core.forum.post_stream.load_more_button')}\n          </Button>\n        </div>\n      );\n    }\n\n    // Allow extensions to add items to the end of the post stream.\n    if (viewingEnd) {\n      items.push(...this.endItems().toArray());\n    }\n\n    // If we're viewing the end of the discussion, the user can reply, and\n    // is not already doing so, then show a 'write a reply' placeholder.\n    if (viewingEnd && (!app.session.user || this.discussion.canReply())) {\n      items.push(\n        <div className=\"PostStream-item\" key=\"reply\" data-index={this.stream.count()} oncreate={postFadeIn}>\n          <ReplyPlaceholder discussion={this.discussion} />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"PostStream\" role=\"feed\" aria-live=\"off\" aria-busy={this.stream.pagesLoading ? 'true' : 'false'}>\n        {items}\n      </div>\n    );\n  }\n\n  /**\n   * @returns {ItemList<import('mithril').Children>}\n   */\n  endItems() {\n    const items = new ItemList();\n\n    return items;\n  }\n\n  onupdate(vnode) {\n    super.onupdate(vnode);\n\n    this.triggerScroll();\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.triggerScroll();\n\n    // This is wrapped in setTimeout due to the following Mithril issue:\n    // https://github.com/lhorie/mithril.js/issues/637\n    setTimeout(() => this.scrollListener.start());\n  }\n\n  onremove(vnode) {\n    super.onremove(vnode);\n\n    this.scrollListener.stop();\n    clearTimeout(this.calculatePositionTimeout);\n  }\n\n  /**\n   * Start scrolling, if appropriate, to a newly-targeted post.\n   */\n  triggerScroll() {\n    if (!this.stream.needsScroll) return;\n\n    const target = this.stream.targetPost;\n    this.stream.needsScroll = false;\n\n    if ('number' in target) {\n      this.scrollToNumber(target.number, this.stream.animateScroll);\n    } else if ('index' in target) {\n      this.scrollToIndex(target.index, this.stream.animateScroll, target.reply);\n    }\n  }\n\n  /**\n   *\n   * @param {number} top\n   */\n  onscroll(top = window.pageYOffset) {\n    if (this.stream.paused || this.stream.pagesLoading) return;\n\n    this.updateScrubber(top);\n\n    this.loadPostsIfNeeded(top);\n\n    // Throttle calculation of our position (start/end numbers of posts in the\n    // viewport) to 100ms.\n    clearTimeout(this.calculatePositionTimeout);\n    this.calculatePositionTimeout = setTimeout(this.calculatePosition.bind(this, top), 100);\n  }\n\n  /**\n   * Check if either extreme of the post stream is in the viewport,\n   * and if so, trigger loading the next/previous page.\n   *\n   * @param {number} top\n   */\n  loadPostsIfNeeded(top = window.pageYOffset) {\n    const marginTop = this.getMarginTop();\n    const viewportHeight = $(window).height() - marginTop;\n    const viewportTop = top + marginTop;\n    const loadAheadDistance = 300;\n\n    if (this.stream.visibleStart > 0) {\n      const $item = this.$('.PostStream-item[data-index=' + this.stream.visibleStart + ']');\n\n      if ($item.length && $item.offset().top > viewportTop - loadAheadDistance) {\n        this.stream.loadPrevious();\n      }\n    }\n\n    if (this.stream.visibleEnd < this.stream.count()) {\n      const $item = this.$('.PostStream-item[data-index=' + (this.stream.visibleEnd - 1) + ']');\n\n      if ($item.length && $item.offset().top + $item.outerHeight(true) < viewportTop + viewportHeight + loadAheadDistance) {\n        this.stream.loadNext();\n      }\n    }\n  }\n\n  updateScrubber(top = window.pageYOffset) {\n    const marginTop = this.getMarginTop();\n    const viewportHeight = $(window).height() - marginTop;\n    const viewportTop = top + marginTop;\n\n    // Before looping through all of the posts, we reset the scrollbar\n    // properties to a 'default' state. These values reflect what would be\n    // seen if the browser were scrolled right up to the top of the page,\n    // and the viewport had a height of 0.\n    const $items = this.$('.PostStream-item[data-index]');\n    let visible = 0;\n    let period = '';\n    let indexFromViewPort = null;\n\n    // Now loop through each of the items in the discussion. An 'item' is\n    // either a single post or a 'gap' of one or more posts that haven't\n    // been loaded yet.\n    $items.each(function () {\n      const $this = $(this);\n      const top = $this.offset().top;\n      const height = $this.outerHeight(true);\n\n      // If this item is above the top of the viewport, skip to the next\n      // one. If it's below the bottom of the viewport, break out of the\n      // loop.\n      if (top + height < viewportTop) {\n        return true;\n      }\n      if (top > viewportTop + viewportHeight) {\n        return false;\n      }\n\n      // Work out how many pixels of this item are visible inside the viewport.\n      // Then add the proportion of this item's total height to the index.\n      const visibleTop = Math.max(0, viewportTop - top);\n      const visibleBottom = Math.min(height, viewportTop + viewportHeight - top);\n      const visiblePost = visibleBottom - visibleTop;\n\n      // We take the index of the first item that passed the previous checks.\n      // It is the item that is first visible in the viewport.\n      if (indexFromViewPort === null) {\n        indexFromViewPort = parseFloat($this.data('index')) + visibleTop / height;\n      }\n\n      if (visiblePost > 0) {\n        visible += visiblePost / height;\n      }\n\n      // If this item has a time associated with it, then set the\n      // scrollbar's current period to a formatted version of this time.\n      const time = $this.data('time');\n      if (time) period = time;\n    });\n\n    // If indexFromViewPort is null, it means no posts are visible in the\n    // viewport. This can happen, when drafting a long reply post. In that case\n    // set the index to the last post.\n    this.stream.index = indexFromViewPort !== null ? indexFromViewPort + 1 : this.stream.count();\n    this.stream.visible = visible;\n    if (period) this.stream.description = dayjs(period).format('MMMM YYYY');\n  }\n\n  /**\n   * Work out which posts (by number) are currently visible in the viewport, and\n   * fire an event with the information.\n   */\n  calculatePosition(top = window.pageYOffset) {\n    const marginTop = this.getMarginTop();\n    const $window = $(window);\n    const viewportHeight = $window.height() - marginTop;\n    const scrollTop = $window.scrollTop() + marginTop;\n    const viewportTop = top + marginTop;\n\n    let startNumber;\n    let endNumber;\n\n    this.$('.PostStream-item').each(function () {\n      const $item = $(this);\n      const top = $item.offset().top;\n      const height = $item.outerHeight(true);\n      const visibleTop = Math.max(0, viewportTop - top);\n\n      const threeQuartersVisible = visibleTop / height < 0.75;\n      const coversQuarterOfViewport = (height - visibleTop) / viewportHeight > 0.25;\n      if (startNumber === undefined && (threeQuartersVisible || coversQuarterOfViewport)) {\n        startNumber = $item.data('number');\n      }\n\n      if (top + height > scrollTop) {\n        if (top + height < scrollTop + viewportHeight) {\n          if ($item.data('number')) {\n            endNumber = $item.data('number');\n          }\n        } else return false;\n      }\n    });\n\n    if (startNumber) {\n      this.attrs.onPositionChange(startNumber || 1, endNumber, startNumber);\n    }\n  }\n\n  /**\n   * Get the distance from the top of the viewport to the point at which we\n   * would consider a post to be the first one visible.\n   *\n   * @return {number}\n   */\n  getMarginTop() {\n    const headerId = app.screen() === 'phone' ? '#app-navigation' : '#header';\n\n    return this.$() && $(headerId).outerHeight() + parseInt(this.$().css('margin-top'), 10);\n  }\n\n  /**\n   * Scroll down to a certain post by number and 'flash' it.\n   *\n   * @param {number} number\n   * @param {boolean} animate\n   * @return {JQueryDeferred}\n   */\n  scrollToNumber(number, animate) {\n    const $item = this.$(`.PostStream-item[data-number=${number}]`);\n\n    return this.scrollToItem($item, animate).then(this.flashItem.bind(this, $item));\n  }\n\n  /**\n   * Scroll down to a certain post by index.\n   *\n   * @param {number} index\n   * @param {boolean} animate\n   * @param {boolean} reply Whether or not to scroll to the reply placeholder.\n   * @return {JQueryDeferred}\n   */\n  scrollToIndex(index, animate, reply) {\n    const $item = reply ? $('.PostStream-item:last-child') : this.$(`.PostStream-item[data-index=${index}]`);\n\n    this.scrollToItem($item, animate, true, reply);\n\n    if (reply) {\n      this.flashItem($item);\n    }\n  }\n\n  /**\n   * Scroll down to the given post.\n   *\n   * @param {JQuery} $item\n   * @param {boolean} animate\n   * @param {boolean} force Whether or not to force scrolling to the item, even\n   *     if it is already in the viewport.\n   * @param {boolean} reply Whether or not to scroll to the reply placeholder.\n   * @return {JQueryDeferred}\n   */\n  scrollToItem($item, animate, force, reply) {\n    const $container = $('html, body').stop(true);\n    const index = $item.data('index');\n\n    if ($item.length) {\n      const itemTop = $item.offset().top - this.getMarginTop();\n      const itemBottom = $item.offset().top + $item.height();\n      const scrollTop = $(document).scrollTop();\n      const scrollBottom = scrollTop + $(window).height();\n\n      // If the item is already in the viewport, we may not need to scroll.\n      // If we're scrolling to the reply placeholder, we'll make sure its\n      // bottom will line up with the top of the composer.\n      if (force || itemTop < scrollTop || itemBottom > scrollBottom) {\n        const top = reply ? itemBottom - $(window).height() + app.composer.computedHeight() : $item.is(':first-child') ? 0 : itemTop;\n\n        if (!animate) {\n          $container.scrollTop(top);\n        } else if (top !== scrollTop) {\n          $container.animate({ scrollTop: top }, 'fast');\n        }\n      }\n    }\n\n    const updateScrubberHeight = () => {\n      // We manually set the index because we want to display the index of the\n      // exact post we've scrolled to, not just that of the first post within viewport.\n      this.updateScrubber();\n      if (index !== undefined) this.stream.index = index + 1;\n    };\n\n    // If we don't update this before the scroll, the scrubber will start\n    // at the top, and animate down, which can be confusing\n    updateScrubberHeight();\n    this.stream.forceUpdateScrubber = true;\n\n    return Promise.all([$container.promise(), this.stream.loadPromise]).then(() => {\n      m.redraw.sync();\n\n      // Rendering post contents will probably throw off our position.\n      // To counter this, we'll scroll either:\n      //   - To the reply placeholder (aligned with composer top)\n      //   - To the top of the page if we're on the first post\n      //   - To the top of a post (if that post exists)\n      // If the post does not currently exist, it's probably\n      // outside of the range we loaded in, so we won't adjust anything,\n      // as it will soon be rendered by the \"load more\" system.\n      let itemOffset;\n      if (reply) {\n        const $placeholder = $('.PostStream-item:last-child');\n        $(window).scrollTop($placeholder.offset().top + $placeholder.height() - $(window).height() + app.composer.computedHeight());\n      } else if (index === 0) {\n        $(window).scrollTop(0);\n      } else if ((itemOffset = $(`.PostStream-item[data-index=${index}]`).offset())) {\n        $(window).scrollTop(itemOffset.top - this.getMarginTop());\n      }\n\n      // We want to adjust this again after posts have been loaded in\n      // and position adjusted so that the scrubber's height is accurate.\n      updateScrubberHeight();\n\n      this.calculatePosition();\n      this.stream.paused = false;\n      // Check if we need to load more posts after scrolling.\n      this.loadPostsIfNeeded();\n    });\n  }\n\n  /**\n   * 'Flash' the given post, drawing the user's attention to it.\n   *\n   * @param {JQuery} $item\n   */\n  flashItem($item) {\n    // This might execute before the fadeIn class has been removed in PostStreamItem's\n    // oncreate, so we remove it just to be safe and avoid a double animation.\n    $item.removeClass('fadeIn');\n    $item.addClass('flash').on('animationend webkitAnimationEnd', (e) => {\n      $item.removeClass('flash');\n    });\n  }\n}\n","import Component, { type ComponentAttrs } from '../../common/Component';\nimport type Post from '../../common/models/Post';\nimport app from '../app';\n\nexport interface IPostTypeAttrs extends ComponentAttrs {\n  post: Post;\n}\n\nexport default class PostType<CustomAttrs extends IPostTypeAttrs = IPostTypeAttrs> extends Component<CustomAttrs> {\n  view() {\n    const post = this.attrs.post;\n    const PostComponent = app.postComponents[post.contentType()!];\n\n    return !!PostComponent && <PostComponent post={post} />;\n  }\n}\n","import app from '../../forum/app';\nimport Component, { type ComponentAttrs } from '../../common/Component';\nimport username from '../../common/helpers/username';\nimport DiscussionControls from '../utils/DiscussionControls';\nimport ComposerPostPreview from './ComposerPostPreview';\nimport listItems from '../../common/helpers/listItems';\nimport Avatar from '../../common/components/Avatar';\nimport type Discussion from '../../common/models/Discussion';\nimport type Model from '../../common/Model';\n\nexport interface IReplyPlaceholderAttrs extends ComponentAttrs {\n  discussion: Discussion | Model;\n  onclick?: () => void;\n  composingReply?: () => boolean;\n}\n\n/**\n * The `ReplyPlaceholder` component displays a placeholder for a reply, which,\n * when clicked, opens the reply composer.\n */\nexport default class ReplyPlaceholder<CustomAttrs extends IReplyPlaceholderAttrs = IReplyPlaceholderAttrs> extends Component<CustomAttrs> {\n  view() {\n    const composingReply = this.attrs.composingReply\n      ? this.attrs.composingReply()\n      : app.composer.composingReplyTo(this.attrs.discussion as Discussion);\n\n    if (composingReply) {\n      return (\n        <article className=\"Post CommentPost editing\" aria-busy=\"true\">\n          <div className=\"Post-container\">\n            <div className=\"Post-side\">\n              <Avatar user={app.session.user} className=\"Post-avatar\" />\n            </div>\n            <div className=\"Post-main\">\n              <header className=\"Post-header\">\n                <div className=\"PostUser\">\n                  <h3 className=\"PostUser-name\">{username(app.session.user)}</h3>\n                  <ul className=\"PostUser-badges badges badges--packed\">{listItems(app.session.user!.badges().toArray())}</ul>\n                </div>\n              </header>\n              <div className=\"Post-body\">\n                <ComposerPostPreview className=\"Post-body\" composer={app.composer} surround={this.anchorPreview.bind(this)} />\n              </div>\n            </div>\n          </div>\n        </article>\n      );\n    }\n\n    const reply =\n      this.attrs.onclick ||\n      (() => {\n        DiscussionControls.replyAction.call(this.attrs.discussion, true, false).catch(() => {});\n      });\n\n    return (\n      <button className=\"Post ReplyPlaceholder\" onclick={reply}>\n        <div className=\"Post-container\">\n          <div className=\"Post-side\">\n            <Avatar user={app.session.user} className=\"Post-avatar\" />\n          </div>\n          <div className=\"Post-main\">\n            <span className=\"Post-header\">{app.translator.trans('core.forum.post_stream.reply_placeholder')}</span>\n          </div>\n        </div>\n      </button>\n    );\n  }\n\n  anchorPreview(preview: () => void) {\n    const anchorToBottom = $(window).scrollTop()! + $(window).height()! >= $(document).height()!;\n\n    preview();\n\n    if (anchorToBottom) {\n      $(window).scrollTop($(document).height()!);\n    }\n  }\n}\n"],"names":["Component","Avatar","classList","LoadingPost","_Component","apply","arguments","_inheritsLoose","_proto","prototype","view","m","className","attrs","user","default","app","ScrollListener","ReplyPlaceholder","Button","ItemList","PostType","PostStream","oninit","vnode","call","discussion","stream","scrollListener","onscroll","bind","_this","lastTime","viewingEnd","posts","postIds","postFadeIn","$","dom","addClass","setTimeout","removeClass","items","map","post","i","content","visibleStart","time","createdAt","key","id","oncreate","toISOString","number","contentType","dt","translator","trans","period","dayjs","add","fromNow","Object","assign","visibleEnd","push","onclick","loadNext","endItems","toArray","session","canReply","count","role","pagesLoading","onupdate","triggerScroll","_this2","start","onremove","stop","clearTimeout","calculatePositionTimeout","needsScroll","target","targetPost","scrollToNumber","animateScroll","scrollToIndex","index","reply","top","window","pageYOffset","paused","updateScrubber","loadPostsIfNeeded","calculatePosition","marginTop","getMarginTop","viewportHeight","height","viewportTop","loadAheadDistance","$item","length","offset","loadPrevious","outerHeight","$items","visible","indexFromViewPort","each","$this","visibleTop","Math","max","visibleBottom","min","visiblePost","parseFloat","data","description","format","$window","scrollTop","startNumber","endNumber","threeQuartersVisible","coversQuarterOfViewport","undefined","onPositionChange","headerId","screen","parseInt","css","animate","scrollToItem","then","flashItem","force","_this3","$container","itemTop","itemBottom","document","scrollBottom","composer","computedHeight","is","updateScrubberHeight","forceUpdateScrubber","Promise","all","promise","loadPromise","redraw","sync","itemOffset","$placeholder","on","e","PostComponent","postComponents","username","DiscussionControls","ComposerPostPreview","listItems","composingReply","composingReplyTo","badges","surround","anchorPreview","replyAction","preview","anchorToBottom"],"sourceRoot":""}